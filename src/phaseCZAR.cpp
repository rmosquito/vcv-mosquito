#include "Mosquito.hpp"
// removed for v1
// #include "dsp/digital.hpp"

extern float waveTable[16][256];


struct PhaseCzar : Module {
	enum ParamIds {
		PITCH_PARAM,
		PITCH_PARAM2,
		PITCH_PARAM3,
		INTERPOLATE_ON,
		PITCH_ON1,
		PITCH_ON2,
		PITCH_ON3,
		BOOST_ON,
		AMP_PARAM,
		AMP_PARAM2,
		AMP_PARAM3,
		WAVE_PARAM,
		SMOOTH_PARAM,
		NUM_PARAMS
	};
	enum InputIds {
		VOCT_INPUT,
		PITCH_INPUT,
		PITCH_INPUT2,
		PITCH_INPUT3,
		AMP_INPUT,
		AMP_INPUT2,
		AMP_INPUT3,
		WAVE_INPUT,
		SMOOTH_INPUT,
		NUM_INPUTS
	};
	enum OutputIds {
		TONE_OUTPUT,
		NUM_OUTPUTS
	};
	enum LightIds {
		INTERPOLATE_LIGHT,
		PITCH_LIGHT1,
		PITCH_LIGHT2,
		PITCH_LIGHT3,
		BOOST_LIGHT,
		NUM_LIGHTS
	};

	float phase = 0.0;
	float phase2 = 0.0;
	float phase3 = 0.0;

	bool p1toggle = true;
	bool p2toggle = true;
	bool p3toggle = false;

	bool interpolatetoggle = false;

	bool boosttoggle = false;

	dsp::SchmittTrigger p1;
	dsp::SchmittTrigger p2;
	dsp::SchmittTrigger p3;

	dsp::SchmittTrigger inttog;
	dsp::SchmittTrigger boosttog;

	// PhaseCzar() : Module(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS) {}
	PhaseCzar() {
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
		configParam(WAVE_PARAM, 0.0, 15.99, 0.0, "Waveform");
		configParam(SMOOTH_PARAM, 0.0, 1.0, 1.0, "Smoothing");
		configParam(PITCH_PARAM, -3.0, 3.0, 0.0, "Fundamental frequency");
		configParam(PITCH_PARAM2, -3.0, 3.0, 1.0, "Overtone 1 frequency");
		configParam(PITCH_PARAM3, -3.0, 3.0, 2.0, "Overtone 2 frequency");
		configParam(AMP_PARAM, 0.0, 1.0, 0.5, "Fundamental level");
		configParam(AMP_PARAM2, 0.0, 1.0, 0.5, "Overtone 1 level");
		configParam(AMP_PARAM3, 0.0, 1.0, 0.5, "Overtone 2 level");
		configButton(INTERPOLATE_ON, "Waveform interpolation");
		configButton(BOOST_ON, "Boost +6V");
		configButton(PITCH_ON1, "Link fundamental to v/oct");
		configButton(PITCH_ON2, "Link overtone 1 to v/oct");
		configButton(PITCH_ON3, "Link overtone 2 to v/oct");

		configInput(VOCT_INPUT, "Pitch (v/oct)");
		configInput(PITCH_INPUT, "Fundamental frequency CV");
		configInput(PITCH_INPUT2, "Overtone 1 frequency CV");
		configInput(PITCH_INPUT3, "Overtone 2 frequency CV");
		configInput(AMP_INPUT, "Fundamental level CV");
		configInput(AMP_INPUT2, "Overtone 1 level CV");
		configInput(AMP_INPUT3, "Overtone 2 level CV");
		configInput(WAVE_INPUT, "Waveform CV");
		configInput(SMOOTH_INPUT, "Smoothing CV");

		configOutput(TONE_OUTPUT, "Tone");
	}

	void process(const ProcessArgs &args) override {
		// Implement a simple sine oscillator
		float deltaTime = args.sampleTime;

		if (inttog.process(params[INTERPOLATE_ON].getValue())) {
			interpolatetoggle = !interpolatetoggle;
		}
		if (p1.process(params[PITCH_ON1].getValue())) {
			p1toggle = !p1toggle;
		}
		if (p2.process(params[PITCH_ON2].getValue())) {
			p2toggle = !p2toggle;
		}
		if (p3.process(params[PITCH_ON3].getValue())) {
			p3toggle = !p3toggle;
		}
		if (boosttog.process(params[BOOST_ON].getValue())) {
			boosttoggle = !boosttoggle;
		}

		float amp = params[AMP_PARAM].getValue() + (inputs[AMP_INPUT].getVoltage() / 10);
		float amp2 = params[AMP_PARAM2].getValue() + (inputs[AMP_INPUT2].getVoltage() / 10);
		float amp3 = params[AMP_PARAM3].getValue() + (inputs[AMP_INPUT3].getVoltage() / 10);

		float wave = params[WAVE_PARAM].getValue() + inputs[WAVE_INPUT].getVoltage();

		float smooth = params[SMOOTH_PARAM].getValue() + (inputs[SMOOTH_INPUT].getVoltage() / 10);

		float voct = inputs[VOCT_INPUT].getVoltage();

		float boost = 2;
		if (boosttoggle) {
			boost = 8;
		}

		// Compute the frequency from the pitch knobs
		float pitch = params[PITCH_PARAM].getValue() + (voct * ( int )p1toggle);
		float pitch2 = params[PITCH_PARAM2].getValue() + (voct * ( int )p2toggle);
		float pitch3 = params[PITCH_PARAM3].getValue() + (voct * ( int )p3toggle);

		// .... and input
		pitch += inputs[PITCH_INPUT].getVoltage();
		pitch2 += inputs[PITCH_INPUT2].getVoltage();
		pitch3 += inputs[PITCH_INPUT3].getVoltage();

		wave = clamp(wave, 0.0f, 15.99f);

		pitch = clamp(pitch, -4.0f, 4.0f);
		pitch2 = clamp(pitch2, -4.0f, 4.0f);
		pitch3 = clamp(pitch3, -4.0f, 4.0f);

		amp = clamp(amp, 0.0f, 1.0f);
		amp2 = clamp(amp2, 0.0f, 1.0f);
		amp3 = clamp(amp3, 0.0f, 1.0f);

		smooth = clamp(smooth, 0.0f, 1.0f);

		// The default pitch is C4
		float freq = 261.626f * powf(2.0f, pitch);
		float freq2 = 261.626f * powf(2.0f, pitch2);
		float freq3 = 261.626f * powf(2.0f, pitch3);

		// Accumulate the phase
		phase2 += freq2 * deltaTime;
		if (phase2 >= 1.0f) {
			phase2 -= 1.0f;
		}


		phase3 += freq3 * deltaTime;
		if (phase3 >= 1.0f) {
			phase3 -= 1.0f;
		}

		phase += freq * deltaTime;
		if (phase >= 1.0f) {
			phase -= 1.0f;
			phase2 = phase;
			phase3 = phase;
		}


		// based on how twisty the smooth knob is, fit the waveform to the inverse of the phase.
		smooth = ((smooth * phase * -1) + 1);

		int nextwave = 0;
		if (( int )wave < 15) {
			nextwave = ( int )wave + 1;
		};

		float tone = interpolateLinear(waveTable[( int )wave], phase * 255.f);
		float tone2 = interpolateLinear(waveTable[( int )wave], phase2 * 255.f);
		float tone3 = interpolateLinear(waveTable[( int )wave], phase3 * 255.f);

		if (interpolatetoggle == 1) {
			tone = crossfade(
				tone,
				interpolateLinear(waveTable[nextwave], phase * 255.f),
				wave - ( int )wave
			);
			tone2 = crossfade(
				tone2,
				interpolateLinear(waveTable[nextwave], phase2 * 255.f),
				wave - ( int )wave
			);
			tone3 = crossfade(
				tone3,
				interpolateLinear(waveTable[nextwave], phase3 * 255.f),
				wave - ( int )wave
			);
		};


		tone *= amp;
		tone2 *= amp2;
		tone3 *= amp3;

		lights[INTERPOLATE_LIGHT].setBrightness(interpolatetoggle);
		lights[BOOST_LIGHT].setBrightness(boosttoggle);

		lights[PITCH_LIGHT1].setBrightness(p1toggle);
		lights[PITCH_LIGHT2].setBrightness(p2toggle);
		lights[PITCH_LIGHT3].setBrightness(p3toggle);

		outputs[TONE_OUTPUT].setVoltage(((tone + tone2 + tone3) * boost * smooth));

		// fold excess waves
		while (abs(outputs[TONE_OUTPUT].getVoltage()) >= 5.1f) {
			if (outputs[TONE_OUTPUT].getVoltage() >= 5.0f) {
				outputs[TONE_OUTPUT].setVoltage(5.0f - (outputs[TONE_OUTPUT].getVoltage() - 5.0f));
			}

			if (outputs[TONE_OUTPUT].getVoltage() <= -5.0f) {
				outputs[TONE_OUTPUT].setVoltage(-5.0f - (outputs[TONE_OUTPUT].getVoltage() + 5.0f));
			}

		}
	}



	json_t *dataToJson() override {
		json_t *rootJ = json_object();

		// v.oct lock
		json_object_set_new(rootJ, "p1toggle", json_boolean(p1toggle));
		json_object_set_new(rootJ, "p2toggle", json_boolean(p2toggle));
		json_object_set_new(rootJ, "p3toggle", json_boolean(p3toggle));
		json_object_set_new(rootJ, "interpolatetoggle", json_boolean(interpolatetoggle));
		json_object_set_new(rootJ, "boosttoggle", json_boolean(boosttoggle));

		return rootJ;
	}

	void dataFromJson(json_t *rootJ) override {
		// oct locks
		json_t *p1toggleJ = json_object_get(rootJ, "p1toggle");
		if (p1toggleJ)
			p1toggle = json_is_true(p1toggleJ);
		json_t *p2toggleJ = json_object_get(rootJ, "p2toggle");
		if (p2toggleJ)
			p2toggle = json_is_true(p2toggleJ);
		json_t *p3toggleJ = json_object_get(rootJ, "p3toggle");
		if (p3toggleJ)
			p3toggle = json_is_true(p3toggleJ);

		json_t *interpolatetoggleJ = json_object_get(rootJ, "interpolatetoggle");
		if (interpolatetoggleJ)
			interpolatetoggle = json_is_true(interpolatetoggleJ);

		json_t *boosttoggleJ = json_object_get(rootJ, "boosttoggle");
		if (boosttoggleJ)
			boosttoggle = json_is_true(boosttoggleJ);

	}
	// For more advanced Module features, read Rack's engine.hpp header file
	// - dataToJson, dataFromJson: serialization of internal data
	// - onSampleRateChange: event triggered by a change of sample rate
	// - onReset, onRandomize, onCreate, onDelete: implements special behavior when user clicks these from the context menu
};

template <typename BASE>
struct MyLight : BASE {
	MyLight() {
		this->box.size = mm2px(Vec(6.0f, 6.0f));
	}
};

struct PhaseCzarWidget : ModuleWidget {
	PhaseCzarWidget(PhaseCzar *module) {
		// v1
		setModule(module);
		setPanel(APP->window->loadSvg(asset::plugin(pluginInstance, "res/phase.svg")));

		// setPanel(SVG::load(asset::plugin(pluginInstance, "res/phase.svg")));

		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));

		addParam(createParam<LEDButton>(Vec(14.5, 65.5), module, PhaseCzar::INTERPOLATE_ON));
		addChild(createLight<MyLight<GreenLight>>(Vec(14.5, 65.5), module, PhaseCzar::INTERPOLATE_LIGHT));

		addParam(createParam<LEDButton>(Vec(14.5, 261.5), module, PhaseCzar::PITCH_ON1));
		addChild(createLight<MyLight<GreenLight>>(Vec(14.5, 261.5), module, PhaseCzar::PITCH_LIGHT1));
		addParam(createParam<LEDButton>(Vec(14.5, 195.5), module, PhaseCzar::PITCH_ON2));
		addChild(createLight<MyLight<GreenLight>>(Vec(14.5, 195.5), module, PhaseCzar::PITCH_LIGHT2));
		addParam(createParam<LEDButton>(Vec(14.5, 130.5), module, PhaseCzar::PITCH_ON3));
		addChild(createLight<MyLight<GreenLight>>(Vec(14.5, 130.5), module, PhaseCzar::PITCH_LIGHT3));

		addParam(createParam<LEDButton>(Vec(149, 326.5), module, PhaseCzar::BOOST_ON));
		addChild(createLight<MyLight<GreenLight>>(Vec(149, 326.5), module, PhaseCzar::BOOST_LIGHT));

		addParam(createParam<Rogan3PWhite>(Vec(82, 53.5), module, PhaseCzar::WAVE_PARAM));
		addParam(createParam<Rogan3PWhite>(Vec(82, 313.5), module, PhaseCzar::SMOOTH_PARAM));

		addParam(createParam<Rogan3PWhite>(Vec(82, 248.5), module, PhaseCzar::PITCH_PARAM));
		addParam(createParam<Rogan3PWhite>(Vec(82, 183.5), module, PhaseCzar::PITCH_PARAM2));
		addParam(createParam<Rogan3PWhite>(Vec(82, 118.5), module, PhaseCzar::PITCH_PARAM3));

		addParam(createParam<Rogan3PWhite>(Vec(136.5, 248.5), module, PhaseCzar::AMP_PARAM));
		addParam(createParam<Rogan3PWhite>(Vec(136.5, 183.5), module, PhaseCzar::AMP_PARAM2));
		// addParam(createParam<Rogan3PWhite>(Vec(128.5, 118.5), module, PhaseCzar::AMP_PARAM3, 0.0, 1.0, 0.5));
		addParam(createParam<Rogan3PWhite>(Vec(136.5, 118.5), module, PhaseCzar::AMP_PARAM3));

		addInput(createInput<PJ301MPort>(Vec(46, 258), module, PhaseCzar::PITCH_INPUT));
		addInput(createInput<PJ301MPort>(Vec(46, 193), module, PhaseCzar::PITCH_INPUT2));
		addInput(createInput<PJ301MPort>(Vec(46, 128), module, PhaseCzar::PITCH_INPUT3));

		addInput(createInput<PJ301MPort>(Vec(191, 258), module, PhaseCzar::AMP_INPUT));
		addInput(createInput<PJ301MPort>(Vec(191, 193), module, PhaseCzar::AMP_INPUT2));
		addInput(createInput<PJ301MPort>(Vec(191, 128), module, PhaseCzar::AMP_INPUT3));


		addInput(createInput<PJ301MPort>(Vec(46, 63), module, PhaseCzar::WAVE_INPUT));
		addInput(createInput<PJ301MPort>(Vec(46, 323), module, PhaseCzar::SMOOTH_INPUT));

		addInput(createInput<PJ301MPort>(Vec(11, 323), module, PhaseCzar::VOCT_INPUT));

		addOutput(createOutput<PJ301MPort>(Vec(191.5, 323), module, PhaseCzar::TONE_OUTPUT));
	}
};


// Specify the Module and ModuleWidget subclass, human-readable
// author name for categorization per pluginInstance, module slug (should never
// change), human-readable module name, and any number of tags
// (found in `include/tags.hpp`) separated by commas.
Model *modelPhaseCzar = createModel<PhaseCzar, PhaseCzarWidget>("PhaseCzar");


float waveTable[16][256]{
{
		// [0] sine
		0,0.0234375,0.046875,0.0703125,0.09375,0.1171875,0.140625,0.1640625,0.1875,0.2109375,0.234375,0.2578125,0.28125,0.3046875,0.328125,0.3515625,0.375,0.3984375,0.421875,0.4453125,0.4609375,0.484375,0.5078125,0.5234375,0.546875,0.5703125,0.5859375,0.609375,0.625,0.640625,0.6640625,0.6796875,0.6953125,0.7109375,0.734375,0.75,0.765625,0.78125,0.796875,0.8046875,0.8203125,0.8359375,0.84375,0.859375,0.875,0.8828125,0.890625,0.90625,0.9140625,0.921875,0.9296875,0.9375,0.9453125,0.953125,0.9609375,0.9609375,0.96875,0.9765625,0.9765625,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.984375,0.9765625,0.9765625,0.96875,0.9609375,0.9609375,0.953125,0.9453125,0.9375,0.9296875,0.921875,0.9140625,0.90625,0.890625,0.8828125,0.875,0.859375,0.84375,0.8359375,0.8203125,0.8046875,0.796875,0.78125,0.765625,0.75,0.734375,0.7109375,0.6953125,0.6796875,0.6640625,0.640625,0.625,0.609375,0.5859375,0.5703125,0.546875,0.5234375,0.5078125,0.484375,0.4609375,0.4453125,0.421875,0.3984375,0.375,0.3515625,0.328125,0.3046875,0.28125,0.2578125,0.234375,0.2109375,0.1875,0.1640625,0.140625,0.1171875,0.09375,0.0703125,0.046875,0.0234375,0,-0.03125,-0.0546875,-0.078125,-0.1015625,-0.125,-0.1484375,-0.171875,-0.1953125,-0.21875,-0.2421875,-0.265625,-0.2890625,-0.3125,-0.3359375,-0.359375,-0.3828125,-0.40625,-0.4296875,-0.453125,-0.46875,-0.4921875,-0.515625,-0.53125,-0.5546875,-0.578125,-0.59375,-0.6171875,-0.6328125,-0.6484375,-0.671875,-0.6875,-0.703125,-0.71875,-0.7421875,-0.7578125,-0.7734375,-0.7890625,-0.8046875,-0.8125,-0.828125,-0.84375,-0.8515625,-0.8671875,-0.8828125,-0.890625,-0.8984375,-0.9140625,-0.921875,-0.9296875,-0.9375,-0.9453125,-0.953125,-0.9609375,-0.96875,-0.96875,-0.9765625,-0.984375,-0.984375,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.9921875,-0.984375,-0.984375,-0.9765625,-0.96875,-0.96875,-0.9609375,-0.953125,-0.9453125,-0.9375,-0.9296875,-0.921875,-0.9140625,-0.8984375,-0.890625,-0.8828125,-0.8671875,-0.8515625,-0.84375,-0.828125,-0.8125,-0.8046875,-0.7890625,-0.7734375,-0.7578125,-0.7421875,-0.71875,-0.703125,-0.6875,-0.671875,-0.6484375,-0.6328125,-0.6171875,-0.59375,-0.578125,-0.5546875,-0.53125,-0.515625,-0.4921875,-0.46875,-0.453125,-0.4296875,-0.40625,-0.3828125,-0.359375,-0.3359375,-0.3125,-0.2890625,-0.265625,-0.2421875,-0.21875,-0.1953125,-0.171875,-0.1484375,-0.125,-0.1015625,-0.078125,-0.0546875,-0.03125
	},
	{
		// [1] triangle
		0.0078125,0.0234375,0.0390625,0.0546875,0.0703125,0.0859375,0.1015625,0.1171875,0.1328125,0.1484375,0.1640625,0.1796875,0.1953125,0.2109375,0.2265625,0.2421875,0.2578125,0.2734375,0.2890625,0.3046875,0.3203125,0.3359375,0.3515625,0.3671875,0.3828125,0.3984375,0.4140625,0.4296875,0.4453125,0.4609375,0.4765625,0.4921875,0.5078125,0.5234375,0.5390625,0.5546875,0.5703125,0.5859375,0.6015625,0.6171875,0.6328125,0.6484375,0.6640625,0.6796875,0.6953125,0.7109375,0.7265625,0.7421875,0.7578125,0.7734375,0.7890625,0.8046875,0.8203125,0.8359375,0.8515625,0.8671875,0.8828125,0.8984375,0.9140625,0.9296875,0.9453125,0.9609375,0.9765625,0.9921875,0.9765625,0.9609375,0.9453125,0.9296875,0.9140625,0.8984375,0.8828125,0.8671875,0.8515625,0.8359375,0.8203125,0.8046875,0.7890625,0.7734375,0.7578125,0.7421875,0.7265625,0.7109375,0.6953125,0.6796875,0.6640625,0.6484375,0.6328125,0.6171875,0.6015625,0.5859375,0.5703125,0.5546875,0.5390625,0.5234375,0.5078125,0.4921875,0.4765625,0.4609375,0.4453125,0.4296875,0.4140625,0.3984375,0.3828125,0.3671875,0.3515625,0.3359375,0.3203125,0.3046875,0.2890625,0.2734375,0.2578125,0.2421875,0.2265625,0.2109375,0.1953125,0.1796875,0.1640625,0.1484375,0.1328125,0.1171875,0.1015625,0.0859375,0.0703125,0.0546875,0.0390625,0.0234375,0.0078125,-0.0078125,-0.0234375,-0.0390625,-0.0546875,-0.0703125,-0.0859375,-0.1015625,-0.1171875,-0.1328125,-0.1484375,-0.1640625,-0.1796875,-0.1953125,-0.2109375,-0.2265625,-0.2421875,-0.2578125,-0.2734375,-0.2890625,-0.3046875,-0.3203125,-0.3359375,-0.3515625,-0.3671875,-0.3828125,-0.3984375,-0.4140625,-0.4296875,-0.4453125,-0.4609375,-0.4765625,-0.4921875,-0.5078125,-0.5234375,-0.5390625,-0.5546875,-0.5703125,-0.5859375,-0.6015625,-0.6171875,-0.6328125,-0.6484375,-0.6640625,-0.6796875,-0.6953125,-0.7109375,-0.7265625,-0.7421875,-0.7578125,-0.7734375,-0.7890625,-0.8046875,-0.8203125,-0.8359375,-0.8515625,-0.8671875,-0.8828125,-0.8984375,-0.9140625,-0.9296875,-0.9453125,-0.9609375,-0.9765625,-0.9921875,-1,-0.984375,-0.96875,-0.953125,-0.9375,-0.921875,-0.90625,-0.890625,-0.875,-0.859375,-0.84375,-0.828125,-0.8125,-0.796875,-0.78125,-0.765625,-0.75,-0.734375,-0.71875,-0.703125,-0.6875,-0.671875,-0.65625,-0.640625,-0.625,-0.609375,-0.59375,-0.578125,-0.5625,-0.546875,-0.53125,-0.515625,-0.4921875,-0.4765625,-0.4609375,-0.4453125,-0.4296875,-0.4140625,-0.3984375,-0.3828125,-0.3671875,-0.3515625,-0.3359375,-0.3203125,-0.3046875,-0.2890625,-0.2734375,-0.2578125,-0.2421875,-0.2265625,-0.2109375,-0.1953125,-0.1796875,-0.1640625,-0.1484375,-0.1328125,-0.1171875,-0.1015625,-0.0859375,-0.0703125,-0.0546875,-0.0390625,-0.0234375,-0.0078125,0.015625
	},
	{
		// [2] noisy tri
		0.0703125,0.25,0.234375,0.1015625,0.1484375,0.0390625,-0.171875,0.1171875,-0.0703125,-0.0625,-0.0234375,-0.0625,0.1015625,0.15625,-0.15625,-0.0234375,0.4296875,0.171875,0.3671875,0.109375,0.1640625,0.25,0.3046875,0.1953125,0.3671875,0.0078125,0.1953125,0.1640625,-0.03125,0.0703125,0.2109375,0.484375,0.6171875,0.6015625,0.4296875,0.3984375,0.3515625,0.3515625,0.4375,0.4140625,0.125,0.5,0.2578125,0.3359375,0.140625,0.578125,0.15625,0.3515625,0.890625,0.6953125,0.859375,0.8828125,0.921875,0.2734375,0.6640625,0.7109375,0.328125,0.2734375,0.625,0.3203125,0.5390625,0.59375,0.75,0.578125,0.5234375,0.6875,0.765625,0.78125,0.578125,0.2734375,0.7265625,0.3671875,0.546875,0.6796875,0.5546875,0.3359375,0.3046875,0.6484375,0.6015625,0.4453125,0.5703125,0.71875,0.859375,0.765625,0.4453125,0.4375,0.5078125,0.15625,0.5703125,0.3046875,0.4453125,0.515625,0.1640625,0.15625,0.484375,0.21875,0.65625,0.3046875,0.609375,0.3125,0.3046875,0.34375,0.046875,0.03125,0.1953125,0.3671875,-0.015625,0.0859375,0.1796875,0.109375,-0.078125,-0.0625,0.234375,0.296875,0.40625,0.3984375,0.015625,-0.1171875,-0.0390625,0.0546875,-0.015625,-0.15625,-0.1875,-0.203125,-0.1171875,-0.234375,-0.21875,-0.171875,0.109375,0.125,0.0078125,0.0859375,0.015625,-0.2109375,-0.0234375,-0.3359375,-0.1953125,-0.1953125,-0.1640625,-0.2421875,-0.46875,-0.1015625,-0.5390625,-0.4609375,-0.0546875,-0.2421875,-0.2109375,0.046875,-0.2265625,-0.546875,-0.5859375,-0.2890625,-0.3359375,-0.515625,-0.6171875,-0.5,-0.484375,-0.625,-0.5625,-0.6015625,-0.2421875,-0.4296875,-0.125,-0.203125,-0.4296875,-0.515625,-0.359375,-0.8359375,-0.703125,-0.4765625,-0.640625,-0.53125,-0.8125,-0.5078125,-0.453125,-0.5859375,-0.3046875,-0.4921875,-0.34375,-0.46875,-0.5625,-0.640625,-0.8203125,-0.640625,-0.7421875,-0.9453125,-0.9296875,-0.78125,-0.6796875,-0.8828125,-0.71875,-0.8046875,-0.515625,-0.6484375,-0.6875,-0.625,-0.390625,-0.7265625,-0.5546875,-0.84375,-1,-0.7265625,-0.6328125,-0.984375,-0.8125,-0.578125,-0.5390625,-0.8671875,-0.40625,-0.671875,-0.5,-0.5859375,-0.25,-0.6953125,-0.6796875,-0.484375,-0.578125,-0.75,-0.4765625,-0.4609375,-0.6015625,-0.625,-0.578125,-0.5234375,-0.2890625,-0.1640625,-0.2265625,-0.125,-0.0703125,-0.34375,-0.5625,-0.5703125,-0.28125,-0.359375,-0.234375,-0.359375,-0.515625,-0.3203125,-0.5,-0.3125,-0.046875,0.0078125,-0.2578125,-0.2109375,-0.21875,-0.125,-0.3515625,-0.3359375,-0.2734375,-0.4140625,-0.21875,-0.0234375,-0.34375,-0.046875,-0.0546875,-0.171875

	},
	{
		// 3 noisy saw
		0.34375,0.6484375,0.9375,0.953125,0.8984375,0.8984375,0.8515625,0.796875,0.734375,0.7265625,0.7109375,0.7578125,0.765625,0.78125,0.8046875,0.7578125,0.734375,0.71875,0.65625,0.6484375,0.6875,0.6875,0.75,0.7421875,0.71875,0.6796875,0.6328125,0.5703125,0.5859375,0.6171875,0.6328125,0.6875,0.6875,0.6640625,0.59375,0.5390625,0.5390625,0.5546875,0.5390625,0.5859375,0.5546875,0.53125,0.46875,0.53125,0.4609375,0.4609375,0.4921875,0.53125,0.5234375,0.5859375,0.625,0.5546875,0.578125,0.5390625,0.4765625,0.40625,0.4453125,0.3828125,0.34375,0.375,0.4453125,0.4296875,0.4140625,0.3984375,0.3828125,0.34375,0.296875,0.2890625,0.328125,0.3046875,0.2734375,0.3203125,0.3671875,0.3046875,0.2890625,0.3125,0.296875,0.28125,0.28125,0.3046875,0.3046875,0.296875,0.2578125,0.2734375,0.28125,0.2109375,0.21875,0.2421875,0.203125,0.203125,0.2109375,0.1484375,0.1796875,0.1484375,0.1328125,0.1171875,0.15625,0.09375,0.0703125,0.0625,0.0625,0.015625,0.0390625,0.0859375,0.0390625,0.015625,0.046875,0.0390625,-0.03125,-0.03125,-0.0390625,-0.0546875,-0.0390625,0.0078125,-0.015625,-0.0234375,-0.0625,-0.078125,-0.0859375,-0.0703125,-0.078125,-0.0546875,-0.1015625,-0.1640625,-0.1640625,-0.1484375,-0.1640625,-0.15625,-0.1875,-0.1640625,-0.1953125,-0.1640625,-0.1328125,-0.140625,-0.1796875,-0.1640625,-0.1796875,-0.2109375,-0.21875,-0.1953125,-0.03125,-0.0703125,-0.0703125,-0.0625,-0.109375,-0.046875,-0.046875,-0.078125,-0.0859375,-0.0625,-0.078125,-0.078125,-0.0859375,-0.0703125,-0.09375,-0.140625,-0.140625,-0.140625,-0.1640625,-0.1953125,-0.1484375,-0.125,-0.1328125,-0.1328125,-0.078125,-0.1484375,-0.1875,-0.15625,-0.1796875,-0.203125,-0.1953125,-0.1640625,-0.15625,-0.1484375,-0.1484375,-0.1640625,-0.1796875,-0.21875,-0.25,-0.265625,-0.2734375,-0.28125,-0.2890625,-0.3125,-0.359375,-0.3515625,-0.359375,-0.390625,-0.359375,-0.34375,-0.34375,-0.3828125,-0.3984375,-0.4609375,-0.4375,-0.4453125,-0.3984375,-0.390625,-0.421875,-0.4453125,-0.4375,-0.5234375,-0.5234375,-0.46875,-0.453125,-0.5,-0.4609375,-0.4921875,-0.53125,-0.5859375,-0.578125,-0.59375,-0.5703125,-0.546875,-0.5234375,-0.578125,-0.5546875,-0.5390625,-0.5703125,-0.5859375,-0.5703125,-0.59375,-0.625,-0.609375,-0.6015625,-0.5859375,-0.5625,-0.546875,-0.625,-0.65625,-0.65625,-0.6796875,-0.6796875,-0.6640625,-0.671875,-0.6953125,-0.7265625,-0.7578125,-0.765625,-0.7421875,-0.7890625,-0.8046875,-0.84375,-0.8359375,-0.875,-0.8984375,-0.890625,-0.90625,-0.9375,-0.90625,-0.9296875,-0.9140625,-0.8828125,-0.859375,-0.5703125,-0.1953125
	},
	{
		// 4 saw
		0.9765625,0.96875,0.9609375,0.953125,0.9453125,0.9375,0.9296875,0.921875,0.9140625,0.90625,0.8984375,0.890625,0.8828125,0.875,0.8671875,0.859375,0.8515625,0.84375,0.8359375,0.828125,0.8203125,0.8125,0.8046875,0.796875,0.7890625,0.78125,0.7734375,0.765625,0.7578125,0.75,0.7421875,0.734375,0.7265625,0.71875,0.7109375,0.703125,0.6953125,0.6875,0.6796875,0.671875,0.6640625,0.65625,0.6484375,0.640625,0.6328125,0.625,0.6171875,0.609375,0.6015625,0.59375,0.5859375,0.578125,0.5703125,0.5625,0.5546875,0.546875,0.5390625,0.53125,0.5234375,0.515625,0.5078125,0.5,0.4921875,0.484375,0.4765625,0.46875,0.4609375,0.453125,0.4453125,0.4375,0.4296875,0.421875,0.4140625,0.40625,0.3984375,0.390625,0.3828125,0.375,0.3671875,0.359375,0.3515625,0.34375,0.3359375,0.328125,0.3203125,0.3125,0.3046875,0.296875,0.2890625,0.28125,0.2734375,0.265625,0.2578125,0.25,0.2421875,0.234375,0.2265625,0.21875,0.2109375,0.203125,0.1953125,0.1875,0.1796875,0.171875,0.1640625,0.15625,0.1484375,0.140625,0.1328125,0.125,0.1171875,0.109375,0.1015625,0.09375,0.0859375,0.078125,0.0703125,0.0625,0.0546875,0.046875,0.0390625,0.03125,0.0234375,0.015625,0.0078125,0,-0.0078125,-0.0234375,-0.03125,-0.0390625,-0.046875,-0.0546875,-0.0625,-0.0703125,-0.078125,-0.0859375,-0.09375,-0.1015625,-0.109375,-0.1171875,-0.125,-0.1328125,-0.140625,-0.1484375,-0.15625,-0.1640625,-0.171875,-0.1796875,-0.1875,-0.1953125,-0.203125,-0.2109375,-0.21875,-0.2265625,-0.234375,-0.2421875,-0.25,-0.2578125,-0.265625,-0.2734375,-0.28125,-0.2890625,-0.296875,-0.3046875,-0.3125,-0.3203125,-0.328125,-0.3359375,-0.34375,-0.3515625,-0.359375,-0.3671875,-0.375,-0.3828125,-0.390625,-0.3984375,-0.40625,-0.4140625,-0.421875,-0.4296875,-0.4375,-0.4453125,-0.453125,-0.4609375,-0.46875,-0.4765625,-0.484375,-0.4921875,-0.5,-0.5078125,-0.515625,-0.5234375,-0.53125,-0.5390625,-0.546875,-0.5546875,-0.5625,-0.5703125,-0.578125,-0.5859375,-0.59375,-0.6015625,-0.609375,-0.6171875,-0.625,-0.6328125,-0.640625,-0.6484375,-0.65625,-0.6640625,-0.671875,-0.6796875,-0.6875,-0.6953125,-0.703125,-0.7109375,-0.71875,-0.7265625,-0.734375,-0.7421875,-0.75,-0.7578125,-0.765625,-0.7734375,-0.78125,-0.7890625,-0.796875,-0.8046875,-0.8125,-0.8203125,-0.828125,-0.8359375,-0.84375,-0.8515625,-0.859375,-0.8671875,-0.875,-0.8828125,-0.890625,-0.8984375,-0.90625,-0.9140625,-0.921875,-0.9296875,-0.9375,-0.9453125,-0.953125,-0.9609375,-0.96875,-0.9765625,-0.984375,-0.9921875,-1,-1,-1,-1
	},
	{
		// 5 square
		0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,0.9375,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125,-0.9453125
	},
	{
		// 6 spikey haired square
		0.09375,0.59375,0.7734375,0.75,0.8046875,0.6953125,0.7734375,0.6484375,0.734375,0.7890625,0.703125,0.5390625,0.421875,0.5078125,0.5234375,0.6484375,0.578125,0.671875,0.578125,0.6015625,0.5078125,0.640625,0.71875,0.671875,0.6640625,0.59375,0.6171875,0.5078125,0.6484375,0.6328125,0.53125,0.546875,0.6796875,0.703125,0.6015625,0.546875,0.640625,0.6484375,0.78125,0.875,0.859375,0.78125,0.59375,0.6171875,0.640625,0.671875,0.6328125,0.6484375,0.6484375,0.640625,0.6640625,0.78125,0.8515625,0.8125,0.8359375,0.7109375,0.75,0.6640625,0.8046875,0.8359375,0.75,0.78125,0.6796875,0.7109375,0.5625,0.59375,0.7734375,0.75,0.8046875,0.6953125,0.7734375,0.6484375,0.734375,0.7890625,0.703125,0.5390625,0.421875,0.5078125,0.5234375,0.6484375,0.578125,0.671875,0.578125,0.6015625,0.5078125,0.640625,0.71875,0.671875,0.6640625,0.59375,0.6171875,0.5078125,0.6484375,0.6328125,0.53125,0.546875,0.6796875,0.703125,0.6015625,0.546875,0.640625,0.6484375,0.78125,0.875,0.859375,0.78125,0.59375,0.6171875,0.640625,0.671875,0.6328125,0.6484375,0.6484375,0.640625,0.6640625,0.78125,0.8515625,0.8125,0.8359375,0.7109375,0.75,0.6640625,0.8046875,0.8359375,0.75,0.78125,0.21875,-0.21875,-0.828125,-0.7890625,-0.609375,-0.6171875,-0.578125,-0.703125,-0.609375,-0.7265625,-0.6484375,-0.5859375,-0.6875,-0.84375,-0.9609375,-0.8828125,-0.859375,-0.7421875,-0.8125,-0.7109375,-0.8125,-0.7734375,-0.8671875,-0.7421875,-0.65625,-0.7109375,-0.71875,-0.796875,-0.7734375,-0.8671875,-0.7421875,-0.75,-0.8515625,-0.828125,-0.703125,-0.6796875,-0.7734375,-0.84375,-0.75,-0.7265625,-0.6015625,-0.5078125,-0.515625,-0.6015625,-0.7890625,-0.7578125,-0.7421875,-0.71875,-0.7578125,-0.7265625,-0.7265625,-0.7421875,-0.71875,-0.6015625,-0.53125,-0.5703125,-0.546875,-0.6796875,-0.6171875,-0.71875,-0.578125,-0.546875,-0.6171875,-0.609375,-0.703125,-0.6796875,-0.828125,-0.7890625,-0.609375,-0.6171875,-0.578125,-0.703125,-0.609375,-0.7265625,-0.6484375,-0.5859375,-0.6875,-0.84375,-0.9609375,-0.8828125,-0.859375,-0.7421875,-0.8125,-0.7109375,-0.8125,-0.7734375,-0.8671875,-0.7421875,-0.65625,-0.7109375,-0.71875,-0.796875,-0.7734375,-0.8671875,-0.7421875,-0.75,-0.8515625,-0.828125,-0.703125,-0.6796875,-0.7734375,-0.84375,-0.75,-0.7265625,-0.6015625,-0.5078125,-0.515625,-0.6015625,-0.7890625,-0.7578125,-0.7421875,-0.71875,-0.7578125,-0.7265625,-0.7265625,-0.7421875,-0.71875,-0.6015625,-0.53125,-0.5703125,-0.546875,-0.6796875,-0.6171875,-0.71875,-0.578125,-0.546875,-0.6171875,-0.609375,-0.703125,-0.21875
	},
	{
		// 7 noisy dbl sq
		0.0546875,0.078125,0.1875,0.2578125,0.3046875,0.4296875,0.5078125,0.546875,0.6171875,0.6953125,0.7734375,0.8046875,0.875,0.890625,0.9296875,0.9140625,0.9453125,0.9140625,0.953125,0.9375,0.90625,0.890625,0.9453125,0.8828125,0.90625,0.90625,0.90625,0.828125,0.8203125,0.8828125,0.828125,0.8671875,0.8671875,0.8515625,0.84375,0.78125,0.7734375,0.8359375,0.8125,0.7890625,0.7890625,0.78125,0.75,0.7890625,0.7109375,0.7265625,0.734375,0.7109375,0.7734375,0.7109375,0.71875,0.6796875,0.7109375,0.625,0.5546875,0.5,0.4296875,0.4140625,0.28125,0.2265625,0.1796875,0.1484375,0.046875,0.0625,-0.0703125,-0.0703125,-0.125,-0.1875,-0.2890625,-0.3203125,-0.421875,-0.4296875,-0.5,-0.5859375,-0.640625,-0.640625,-0.734375,-0.7109375,-0.71875,-0.734375,-0.71875,-0.75,-0.7265625,-0.7421875,-0.7890625,-0.765625,-0.78125,-0.7734375,-0.7421875,-0.765625,-0.8046875,-0.7734375,-0.8046875,-0.8515625,-0.796875,-0.859375,-0.8046875,-0.8125,-0.828125,-0.8671875,-0.890625,-0.859375,-0.9140625,-0.8984375,-0.90625,-0.90625,-0.9375,-0.9296875,-0.9453125,-0.9375,-0.9453125,-0.96875,-0.9375,-0.9609375,-0.875,-0.875,-0.8515625,-0.78125,-0.6796875,-0.6328125,-0.578125,-0.484375,-0.390625,-0.3046875,-0.2734375,-0.171875,-0.1484375,-0.03125,0,0.09375,0.15625,0.234375,0.3203125,0.421875,0.46875,0.5390625,0.5859375,0.65625,0.78125,0.84375,0.8359375,0.9140625,0.921875,0.96875,0.9453125,0.8984375,0.921875,0.9140625,0.9453125,0.921875,0.9375,0.90625,0.9296875,0.859375,0.859375,0.890625,0.828125,0.875,0.8125,0.859375,0.84375,0.8515625,0.84375,0.8203125,0.84375,0.8203125,0.7890625,0.796875,0.8125,0.7890625,0.7578125,0.7734375,0.78125,0.78125,0.7578125,0.765625,0.78125,0.703125,0.7265625,0.6875,0.6484375,0.6015625,0.5546875,0.484375,0.4375,0.3671875,0.328125,0.28125,0.203125,0.1484375,0.1171875,0.0390625,-0.0390625,-0.109375,-0.171875,-0.1953125,-0.2421875,-0.3046875,-0.40625,-0.4296875,-0.5390625,-0.6015625,-0.625,-0.6796875,-0.7421875,-0.7578125,-0.6953125,-0.75,-0.75,-0.7578125,-0.7265625,-0.7578125,-0.78125,-0.7734375,-0.75,-0.796875,-0.765625,-0.8046875,-0.8046875,-0.8046875,-0.796875,-0.8046875,-0.796875,-0.8125,-0.84375,-0.828125,-0.875,-0.8203125,-0.84375,-0.8359375,-0.84375,-0.859375,-0.9296875,-0.890625,-0.8828125,-0.9140625,-0.9453125,-0.921875,-0.90625,-0.9609375,-0.953125,-0.9375,-0.9453125,-0.890625,-0.84375,-0.7890625,-0.671875,-0.609375,-0.5625,-0.5,-0.390625,-0.3515625,-0.2578125,-0.171875,-0.1328125,-0.0546875
	},
	{
		// [8] monowave organ
		0.1796875,0.34375,0.4765625,0.6015625,0.703125,0.8046875,0.875,0.921875,0.9296875,0.921875,0.8828125,0.828125,0.75,0.65625,0.5625,0.4609375,0.3515625,0.2578125,0.1640625,0.09375,0.03125,-0.015625,-0.0390625,-0.046875,-0.046875,-0.015625,0.015625,0.0703125,0.125,0.1875,0.25,0.3125,0.359375,0.40625,0.4453125,0.46875,0.4765625,0.4765625,0.4609375,0.4453125,0.4140625,0.3828125,0.34375,0.3125,0.28125,0.25,0.234375,0.234375,0.234375,0.25,0.28125,0.328125,0.375,0.4296875,0.4921875,0.5546875,0.609375,0.65625,0.6875,0.71875,0.7265625,0.71875,0.6875,0.6484375,0.578125,0.5,0.3984375,0.296875,0.1796875,0.0625,-0.0546875,-0.15625,-0.2578125,-0.34375,-0.3984375,-0.4375,-0.453125,-0.4453125,-0.40625,-0.3359375,-0.2578125,-0.15625,-0.03125,0.1015625,0.234375,0.375,0.515625,0.6484375,0.7578125,0.859375,0.9296875,0.984375,0.9921875,0.9921875,0.96875,0.921875,0.84375,0.75,0.6484375,0.53125,0.40625,0.28125,0.15625,0.046875,-0.0546875,-0.140625,-0.2109375,-0.2578125,-0.2890625,-0.3046875,-0.296875,-0.265625,-0.234375,-0.1875,-0.1328125,-0.078125,-0.03125,0.015625,0.0546875,0.09375,0.109375,0.125,0.125,0.1171875,0.09375,0.0625,0.0234375,-0.0078125,-0.046875,-0.0859375,-0.1171875,-0.1328125,-0.1484375,-0.1484375,-0.1328125,-0.109375,-0.078125,-0.0390625,0.0078125,0.0625,0.109375,0.1640625,0.2109375,0.25,0.2734375,0.28125,0.265625,0.2421875,0.1875,0.1171875,0.03125,-0.0625,-0.1796875,-0.3046875,-0.4296875,-0.546875,-0.671875,-0.7734375,-0.8671875,-0.9375,-0.9921875,-1,-1,-1,-0.953125,-0.8828125,-0.78125,-0.6640625,-0.5390625,-0.3984375,-0.2578125,-0.1171875,0.0078125,0.1328125,0.234375,0.3203125,0.3828125,0.421875,0.4296875,0.421875,0.3828125,0.3203125,0.234375,0.140625,0.03125,-0.0859375,-0.203125,-0.3125,-0.421875,-0.5234375,-0.6015625,-0.6640625,-0.7109375,-0.7421875,-0.75,-0.734375,-0.7109375,-0.6796875,-0.6328125,-0.5703125,-0.515625,-0.453125,-0.3984375,-0.34375,-0.3046875,-0.2734375,-0.2578125,-0.25,-0.2578125,-0.2734375,-0.3046875,-0.328125,-0.3671875,-0.40625,-0.4375,-0.4609375,-0.484375,-0.5,-0.5,-0.484375,-0.46875,-0.4296875,-0.3828125,-0.328125,-0.2734375,-0.2109375,-0.1484375,-0.0859375,-0.0390625,-0.0078125,0.015625,0.03125,0.015625,-0.0078125,-0.0546875,-0.109375,-0.1875,-0.28125,-0.375,-0.4765625,-0.5859375,-0.6796875,-0.7734375,-0.84375,-0.90625,-0.9453125,-0.953125,-0.9375,-0.8984375,-0.828125,-0.734375,-0.6171875,-0.4921875,-0.3515625,-0.1875,-0.0078125
	},
	{
		// rich slopey
		0.53125,0.671875,0.7734375,0.609375,0.734375,0.65625,0.984375,0.765625,0.578125,0.6875,0.984375,0.7734375,0.84375,0.6875,0.609375,0.6328125,0.765625,0.578125,0.8984375,0.546875,0.7265625,0.7109375,0.7578125,0.78125,0.546875,0.7421875,0.5625,0.9921875,0.5859375,0.9921875,0.8203125,0.7265625,0.890625,0.859375,0.8046875,0.9921875,0.84375,0.5625,0.578125,0.6171875,0.96875,0.96875,0.71875,0.828125,0.6171875,0.6640625,0.8515625,0.5546875,0.5546875,0.921875,0.8515625,0.7265625,0.9609375,0.9453125,0.8515625,0.5,0.7265625,0.6328125,0.7109375,0.421875,0.7734375,0.6875,0.5390625,0.3984375,0.578125,0.75,0.5546875,0.8828125,0.6015625,0.703125,0.6484375,0.3984375,0.6875,0.6953125,0.640625,0.65625,0.40625,0.3515625,0.5,0.421875,0.3671875,0.4296875,0.375,0.390625,0.515625,0.5546875,0.65625,0.3984375,0.2265625,0.21875,0.5078125,0.578125,0.296875,0.2265625,0.3125,0.5234375,0.3828125,0.5859375,0.4375,0.4296875,0.203125,0.5234375,0.453125,0.515625,0.4921875,0.15625,0.0078125,0.484375,0.0546875,0.1640625,0.3984375,0.2734375,0,0.203125,0.3515625,0.0546875,0.0234375,0.375,0.34375,0.015625,0.09375,0.25,-0.140625,-0.140625,0.0390625,-0.1875,0.1015625,-0.171875,-0.21875,-0.0078125,-0.2578125,0,-0.046875,-0.296875,0.09375,-0.1953125,-0.15625,-0.3984375,-0.2578125,0.0546875,-0.1171875,-0.1171875,-0.40625,-0.171875,-0.421875,-0.3125,-0.1796875,-0.4765625,-0.4140625,-0.4609375,-0.2265625,-0.2109375,-0.2109375,-0.453125,-0.140625,-0.546875,-0.4765625,-0.3046875,-0.6015625,-0.21875,-0.2890625,-0.3359375,-0.5625,-0.4921875,-0.328125,-0.4765625,-0.5859375,-0.40625,-0.3515625,-0.4140625,-0.375,-0.4375,-0.765625,-0.4140625,-0.3203125,-0.5,-0.6484375,-0.828125,-0.5,-0.4375,-0.4765625,-0.40625,-0.71875,-0.8515625,-0.6796875,-0.3984375,-0.6796875,-0.6328125,-0.6796875,-0.78125,-0.8515625,-0.8984375,-0.9140625,-0.53125,-0.8046875,-0.7109375,-0.84375,-0.5703125,-0.9765625,-0.6015625,-0.984375,-0.78125,-0.8828125,-0.8671875,-0.8984375,-0.5078125,-0.9453125,-0.6015625,-0.890625,-0.796875,-0.9296875,-0.6484375,-0.5390625,-0.765625,-0.6484375,-0.7578125,-0.7890625,-1,-0.6484375,-0.828125,-0.71875,-0.9921875,-0.5625,-0.7265625,-0.96875,-0.8359375,-0.921875,-0.65625,-0.859375,-0.65625,-0.8125,-0.5625,-0.9921875,-0.9609375,-0.796875,-0.71875,-0.9453125,-0.7421875,-0.640625,-0.671875,-0.9609375,-1,-0.8046875,-0.828125,-0.859375,-0.9453125,-0.703125,-1,-1,-0.8671875,-0.6875,-0.7109375,-1,-0.921875,-0.5703125,-0.8671875
	},
	{
		// symmetrical pulse-fold saw
		0.6484375,0.65625,0.6640625,0.6796875,0.6796875,0.703125,0.703125,0.7109375,0.71875,0.71875,0.71875,0.71875,0.71875,0.7109375,0.7109375,0.703125,0.703125,0.640625,0.2578125,0.1875,0.1171875,0.046875,-0.0390625,-0.328125,-0.3984375,-0.4765625,-0.5390625,-0.609375,-0.6796875,-0.6875,-0.65625,-0.6171875,0.7109375,0.6484375,0.6015625,0.578125,0.6328125,0.6796875,0.734375,0.796875,0.859375,0.6015625,0.546875,0.4921875,0.4453125,0.3828125,0.03125,-0.015625,0,0.0078125,0.0234375,0.0390625,0.046875,0.0625,0.0703125,0.0859375,0.0859375,0.09375,0.09375,0.109375,0.1171875,0.109375,0.1171875,0.109375,0.6484375,0.640625,0.640625,0.6328125,0.6328125,0.609375,0.59375,0.5859375,0.5625,0.015625,-0.0078125,-0.0234375,-0.0390625,-0.0546875,-0.078125,-0.1015625,-0.109375,-0.125,-0.140625,-0.1640625,-0.171875,-0.1796875,-0.1953125,-0.203125,-0.2109375,-0.21875,-0.2265625,-0.2265625,-0.234375,-0.2265625,-0.21875,-0.2109375,0.328125,0.3359375,0.34375,0.3515625,0.3671875,0.3828125,0.390625,0.40625,0.421875,-0.1171875,-0.109375,-0.09375,-0.0859375,-0.078125,-0.0703125,-0.0703125,-0.0546875,-0.0546875,-0.0546875,-0.0625,-0.0625,-0.0703125,-0.078125,-0.078125,-0.09375,-0.109375,-0.125,-0.140625,-0.1640625,-0.1796875,-0.1953125,-0.21875,0.21875,0.1953125,0.1796875,0.1640625,0.140625,0.125,0.109375,0.09375,0.078125,0.078125,0.0703125,0.0625,0.0625,0.0546875,0.0546875,0.0546875,0.0703125,0.0703125,0.078125,0.0859375,0.09375,0.109375,0.1171875,-0.421875,-0.40625,-0.390625,-0.3828125,-0.3671875,-0.3515625,-0.34375,-0.3359375,-0.328125,0.2109375,0.21875,0.2265625,0.234375,0.2265625,0.2265625,0.21875,0.2109375,0.203125,0.1953125,0.1796875,0.171875,0.1640625,0.140625,0.125,0.109375,0.1015625,0.078125,0.0546875,0.0390625,0.0234375,0.0078125,-0.015625,-0.5625,-0.5859375,-0.59375,-0.609375,-0.6328125,-0.6328125,-0.640625,-0.640625,-0.6484375,-0.109375,-0.1171875,-0.109375,-0.1171875,-0.109375,-0.09375,-0.09375,-0.0859375,-0.0859375,-0.0703125,-0.0625,-0.046875,-0.0390625,-0.0234375,-0.0078125,0,0.015625,-0.03125,-0.3828125,-0.4453125,-0.4921875,-0.546875,-0.6015625,-0.859375,-0.796875,-0.734375,-0.6796875,-0.6328125,-0.578125,-0.6015625,-0.6484375,-0.7109375,0.6171875,0.65625,0.6875,0.6796875,0.609375,0.5390625,0.4765625,0.3984375,0.328125,0.0390625,-0.046875,-0.1171875,-0.1875,-0.2578125,-0.640625,-0.703125,-0.703125,-0.7109375,-0.7109375,-0.71875,-0.71875,-0.71875,-0.71875,-0.71875,-0.7109375,-0.703125,-0.703125,-0.6796875,-0.6796875,-0.6640625,-0.65625,-0.6484375
	},
	{
		//  mountain range
		0.1484375,0.2734375,0.375,0.53125,0.5546875,0.6875,0.7890625,0.8515625,0.9140625,0.9921875,0.9921875,0.9375,0.984375,0.8828125,0.9140625,0.90625,0.9296875,0.9765625,0.9765625,0.9296875,0.890625,0.859375,0.703125,0.6484375,0.5625,0.4609375,0.3515625,0.3203125,0.1484375,0.265625,0.1875,0.140625,0.1875,0.1171875,0.0625,-0.015625,-0.09375,-0.125,-0.1796875,-0.1875,-0.2578125,-0.2578125,-0.2890625,-0.265625,-0.265625,-0.2421875,-0.1953125,-0.1484375,-0.1484375,-0.078125,-0.015625,-0.0234375,0.0546875,0.1484375,0.1796875,0.09375,0.1328125,0.171875,0.2109375,0.0546875,0.0859375,0.1875,0.1875,0.25,0.2734375,0.2734375,0.2734375,0.3046875,0.3046875,0.265625,0.3046875,0.2578125,0.1640625,0.1640625,0.1328125,0.09375,0.0546875,0,0.1328125,0.125,0.0859375,0.046875,0.015625,0.1484375,0.0859375,0.046875,0.046875,0.0390625,-0.015625,-0.046875,-0.09375,-0.0546875,-0.0546875,-0.0546875,-0.0546875,-0.0078125,-0.03125,-0.0078125,0.0234375,0.0546875,0.0859375,0.1171875,-0.0234375,0.0390625,0.046875,0.078125,0.1171875,-0.0625,0.03125,-0.0078125,0.0625,0.0859375,0.0859375,0.0859375,0.0546875,0.1015625,0.078125,0.078125,0.078125,0.0390625,0.0390625,0.0078125,-0.0625,-0.0703125,0.078125,0.0078125,0,0.03125,-0.078125,-0.078125,0.0234375,0.0234375,-0.078125,-0.0078125,-0.0546875,-0.0859375,-0.109375,-0.140625,-0.1171875,-0.1171875,-0.1484375,-0.09375,-0.125,-0.1015625,-0.125,-0.0703125,-0.0390625,0.0234375,-0.1171875,-0.0859375,-0.09375,-0.0546875,-0.015625,-0.015625,0.015625,-0.1328125,-0.1015625,-0.0625,-0.0390625,-0.0078125,-0.0078125,-0.0078125,-0.015625,-0.015625,-0.046875,0.0078125,-0.0859375,-0.0546875,-0.125,-0.125,-0.1328125,-0.1875,-0.015625,-0.0546875,-0.1015625,-0.140625,-0.171875,-0.03125,-0.1015625,-0.140625,-0.171875,-0.2265625,-0.28125,-0.28125,-0.34375,-0.3046875,-0.3515625,-0.3125,-0.3515625,-0.2890625,-0.296875,-0.21875,-0.1953125,-0.1953125,-0.171875,-0.1015625,-0.0703125,-0.140625,-0.1484375,-0.109375,-0.2421875,-0.21875,-0.09375,-0.0703125,-0.0234375,0.0390625,0.1015625,0.1328125,0.15625,0.2265625,0.21875,0.21875,0.25,0.21875,0.1875,0.1875,0.1171875,0.1171875,-0.03125,-0.03125,-0.1015625,-0.15625,-0.234375,-0.1171875,-0.234375,-0.125,-0.234375,-0.3671875,-0.4296875,-0.5234375,-0.6328125,-0.6875,-0.765625,-0.8671875,-0.9296875,-0.9765625,-0.984375,-0.984375,-0.9765625,-0.9140625,-0.8828125,-0.9140625,-0.890625,-0.9921875,-0.9453125,-0.96875,-0.953125,-0.8984375,-0.796875,-0.6953125,-0.671875,-0.5703125,-0.4375,-0.3125,-0.21875,-0.21875
	},
	{
		// saw with overtones
		0.4140625,0.4453125,0.4609375,0.484375,0.65625,0.65625,0.609375,0.65625,0.8125,0.7578125,0.765625,0.78125,0.8046875,0.796875,0.7421875,0.71875,0.7890625,0.703125,0.671875,0.625,0.734375,0.640625,0.59375,0.5234375,0.6484375,0.5546875,0.5703125,0.4921875,0.5546875,0.53125,0.5,0.4921875,0.5,0.4921875,0.4453125,0.421875,0.5078125,0.484375,0.3984375,0.3828125,0.5,0.4140625,0.3828125,0.359375,0.3828125,0.3359375,0.2734375,0.2421875,0.3203125,0.21875,0.1953125,0.1484375,0.2734375,0.1875,0.15625,0.1171875,0.265625,0.1953125,0.234375,0.1875,0.265625,0.28125,0.265625,0.296875,0.328125,0.34375,0.3203125,0.296875,0.421875,0.40625,0.328125,0.3359375,0.453125,0.3828125,0.34375,0.328125,0.328125,0.296875,0.2109375,0.171875,0.234375,0.1328125,0.0859375,0.0390625,0.140625,0.046875,-0.015625,-0.0703125,0.0703125,-0.015625,0,-0.0546875,0.0078125,0.015625,-0.0078125,0.0078125,0.0390625,0.0625,0.015625,0.0078125,0.140625,0.1171875,0.0390625,0.0546875,0.1796875,0.1171875,0.0859375,0.0859375,0.109375,0.078125,0.015625,-0.015625,0.0625,-0.046875,-0.078125,-0.125,0,-0.1015625,-0.1640625,-0.1953125,-0.078125,-0.1640625,-0.140625,-0.1953125,-0.140625,-0.1328125,-0.171875,-0.15625,0.09375,0.0703125,0.0390625,0.015625,0.140625,0.1015625,0.0078125,0.0234375,0.140625,0.0625,0.03125,0.0234375,0.0234375,-0.0078125,-0.078125,-0.1171875,-0.0390625,-0.140625,-0.1640625,-0.203125,-0.09375,-0.1640625,-0.21875,-0.2578125,-0.1171875,-0.1953125,-0.171875,-0.2109375,-0.1328125,-0.125,-0.15625,-0.1328125,-0.09375,-0.0859375,-0.125,-0.125,-0.015625,-0.0390625,-0.1328125,-0.125,0,-0.078125,-0.109375,-0.125,-0.1171875,-0.1640625,-0.2421875,-0.2890625,-0.2109375,-0.3125,-0.3671875,-0.421875,-0.3125,-0.40625,-0.4921875,-0.5234375,-0.3828125,-0.4765625,-0.4453125,-0.5,-0.4296875,-0.40625,-0.453125,-0.4140625,-0.375,-0.359375,-0.390625,-0.390625,-0.265625,-0.2890625,-0.3671875,-0.328125,-0.1953125,-0.2578125,-0.2890625,-0.28125,-0.2578125,-0.28125,-0.359375,-0.3671875,-0.296875,-0.3984375,-0.4296875,-0.46875,-0.359375,-0.4453125,-0.515625,-0.5546875,-0.4375,-0.5234375,-0.515625,-0.578125,-0.515625,-0.53125,-0.578125,-0.578125,-0.5625,-0.5703125,-0.6171875,-0.6484375,-0.5625,-0.59375,-0.703125,-0.703125,-0.5859375,-0.671875,-0.7109375,-0.7265625,-0.71875,-0.75,-0.8359375,-0.8515625,-0.765625,-0.875,-0.8828125,-0.921875,-0.78125,-0.8515625,-0.8984375,-0.8984375,-0.7421875,-0.7890625,-0.734375,-0.75,-0.65625,-0.59375,-0.59375,-0.5390625
	},
	{
		// octaves sine
		0.0078125,0.0703125,0.1484375,0.2265625,0.296875,0.375,0.4375,0.5,0.5703125,0.6328125,0.6796875,0.734375,0.7890625,0.8359375,0.875,0.9140625,0.9453125,0.953125,0.953125,0.953125,0.953125,0.9453125,0.9296875,0.90625,0.875,0.8515625,0.828125,0.7890625,0.75,0.6953125,0.65625,0.609375,0.5703125,0.515625,0.4609375,0.4140625,0.359375,0.3203125,0.265625,0.21875,0.1796875,0.125,0.0859375,0.046875,0.0078125,0,-0.03125,-0.0546875,-0.078125,-0.109375,-0.1171875,-0.1171875,-0.1328125,-0.1328125,-0.1328125,-0.1328125,-0.1171875,-0.109375,-0.09375,-0.078125,-0.0546875,-0.0390625,-0.015625,0,0.0234375,0.03125,0.0625,0.0859375,0.109375,0.125,0.1484375,0.1640625,0.1796875,0.1875,0.1875,0.1875,0.1875,0.1875,0.1796875,0.1640625,0.1484375,0.140625,0.109375,0.0859375,0.0625,0.0234375,0,-0.03125,-0.0703125,-0.109375,-0.15625,-0.1953125,-0.234375,-0.2890625,-0.328125,-0.3828125,-0.421875,-0.46875,-0.5078125,-0.546875,-0.5859375,-0.6171875,-0.6484375,-0.6796875,-0.703125,-0.71875,-0.7421875,-0.7421875,-0.7578125,-0.7578125,-0.7578125,-0.7421875,-0.7265625,-0.703125,-0.6796875,-0.6484375,-0.625,-0.5859375,-0.546875,-0.5,-0.4609375,-0.40625,-0.3515625,-0.2890625,-0.234375,-0.171875,-0.109375,-0.0546875,0,0.0625,0.125,0.1796875,0.2421875,0.3046875,0.359375,0.4140625,0.4609375,0.515625,0.5546875,0.59375,0.6328125,0.65625,0.6953125,0.7109375,0.734375,0.75,0.7578125,0.7578125,0.7578125,0.75,0.734375,0.71875,0.6953125,0.6796875,0.6484375,0.6171875,0.578125,0.5390625,0.5,0.453125,0.4140625,0.375,0.3203125,0.265625,0.2265625,0.1796875,0.140625,0.1015625,0.046875,0.0078125,-0.015625,-0.0390625,-0.078125,-0.109375,-0.1328125,-0.15625,-0.1875,-0.1953125,-0.2109375,-0.2265625,-0.2265625,-0.2265625,-0.2265625,-0.2109375,-0.2109375,-0.1953125,-0.1875,-0.15625,-0.1484375,-0.1171875,-0.09375,-0.078125,-0.0546875,-0.03125,0,0.0078125,0.0234375,0.046875,0.0625,0.0703125,0.0859375,0.1015625,0.1015625,0.1015625,0.1015625,0.0859375,0.0859375,0.0703125,0.046875,0.0234375,0,-0.015625,-0.0390625,-0.078125,-0.1171875,-0.15625,-0.1953125,-0.234375,-0.2890625,-0.34375,-0.3828125,-0.4296875,-0.484375,-0.5390625,-0.578125,-0.625,-0.6640625,-0.71875,-0.7578125,-0.796875,-0.8203125,-0.859375,-0.8828125,-0.9140625,-0.921875,-0.9375,-0.953125,-0.953125,-0.953125,-0.953125,-0.921875,-0.8828125,-0.859375,-0.8046875,-0.765625,-0.71875,-0.6640625,-0.6015625,-0.546875,-0.484375,-0.421875,-0.34375,-0.2734375,-0.1953125,-0.1328125,-0.0546875
	},
	{
		// cat wave
		0.0859375,0.140625,0.1875,0.234375,0.2734375,0.328125,0.3515625,0.375,0.3828125,0.4140625,0.4296875,0.4375,0.46875,0.484375,0.5,0.5234375,0.5390625,0.5546875,0.578125,0.59375,0.609375,0.6328125,0.6484375,0.6640625,0.6796875,0.6953125,0.7109375,0.7265625,0.7421875,0.7578125,0.7734375,0.796875,0.8046875,0.8203125,0.828125,0.8359375,0.859375,0.8671875,0.8515625,0.828125,0.8046875,0.78125,0.765625,0.7421875,0.7109375,0.6953125,0.6640625,0.640625,0.625,0.6328125,0.6328125,0.640625,0.6484375,0.6484375,0.65625,0.6640625,0.6640625,0.6640625,0.6640625,0.6796875,0.6796875,0.6796875,0.6796875,0.6796875,0.6875,0.6796875,0.6796875,0.6796875,0.6796875,0.6796875,0.6640625,0.6640625,0.6640625,0.6640625,0.65625,0.6484375,0.6484375,0.640625,0.6328125,0.6328125,0.625,0.640625,0.6640625,0.6953125,0.7109375,0.7421875,0.765625,0.78125,0.8046875,0.828125,0.8515625,0.8671875,0.859375,0.8359375,0.828125,0.8203125,0.8046875,0.796875,0.7734375,0.7578125,0.7421875,0.7265625,0.7109375,0.6953125,0.6796875,0.6640625,0.6484375,0.6328125,0.609375,0.59375,0.578125,0.5546875,0.5390625,0.5234375,0.5,0.484375,0.46875,0.4375,0.4296875,0.4140625,0.3828125,0.375,0.3515625,0.3046875,0.25,0.1953125,0.1484375,0.0859375,-0.125,-0.1796875,-0.2265625,-0.2734375,-0.328125,-0.3828125,-0.40625,-0.421875,-0.4375,-0.453125,-0.4765625,-0.4921875,-0.5234375,-0.53125,-0.5546875,-0.5625,-0.5859375,-0.609375,-0.6171875,-0.6484375,-0.65625,-0.6796875,-0.6953125,-0.7109375,-0.7265625,-0.75,-0.7578125,-0.7734375,-0.78125,-0.8125,-0.8203125,-0.8359375,-0.84375,-0.8671875,-0.875,-0.8828125,-0.8984375,-0.875,-0.859375,-0.8359375,-0.8125,-0.7890625,-0.7734375,-0.75,-0.71875,-0.703125,-0.671875,-0.6484375,-0.65625,-0.6640625,-0.671875,-0.6796875,-0.6796875,-0.6796875,-0.6953125,-0.703125,-0.703125,-0.703125,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.7109375,-0.703125,-0.703125,-0.703125,-0.6953125,-0.6796875,-0.6796875,-0.6796875,-0.671875,-0.6640625,-0.65625,-0.6484375,-0.671875,-0.703125,-0.71875,-0.75,-0.7734375,-0.7890625,-0.8125,-0.8359375,-0.859375,-0.875,-0.8984375,-0.8828125,-0.875,-0.8671875,-0.84375,-0.8359375,-0.8203125,-0.8125,-0.78125,-0.7734375,-0.7578125,-0.75,-0.7265625,-0.7109375,-0.6953125,-0.6796875,-0.65625,-0.6484375,-0.6171875,-0.609375,-0.5859375,-0.5625,-0.5546875,-0.53125,-0.5234375,-0.4921875,-0.4765625,-0.453125,-0.4375,-0.421875,-0.40625,-0.3828125,-0.359375,-0.3125,-0.265625,-0.21875,-0.1640625,-0.125
	},
	{
		// noise
		-0.546875,0.015625,0.375,0.671875,-0.59375,0.15625,-0.984375,0.1875,0.453125,-0.90625,-0.40625,-0.171875,0.9375,0.78125,-0.90625,0.71875,-0.671875,0.625,-0.296875,-0.140625,0.859375,0.984375,0.734375,-0.140625,-0.046875,0.96875,0.234375,-0.515625,0.015625,0.328125,0.078125,0.890625,-0.171875,-0.671875,-0.625,0.796875,0.734375,0.015625,0,-0.984375,0.453125,-0.375,0.28125,-0.734375,-0.96875,-0.546875,0,0.09375,-0.609375,0.46875,-0.453125,-0.359375,-0.578125,0.265625,0.453125,-0.59375,-0.265625,0.171875,-0.875,0.046875,-0.453125,-0.609375,0.15625,0.8125,0.484375,0.171875,0.890625,-0.046875,-0.828125,0.1875,-0.984375,0.765625,0.3125,0.125,-0.34375,-0.15625,-0.296875,0.15625,0.078125,0.390625,-0.59375,-0.625,-0.5625,0.875,-0.546875,0.96875,-0.796875,-0.8125,0.859375,-0.65625,-0.515625,-0.65625,0.15625,0.734375,0.21875,0.515625,-1,-0.046875,-0.203125,-0.4375,0.765625,0.921875,0.453125,-0.65625,-0.46875,0.140625,-0.203125,0.625,-0.828125,-0.9375,-0.5,-0.46875,-0.125,0.359375,0.921875,-0.21875,0.6875,0.59375,-0.515625,0.203125,-0.984375,-0.046875,-0.421875,-0.9375,-0.921875,-0.140625,0,-0.796875,0.84375,0.75,0.46875,0.59375,0.125,0.875,-0.265625,0.515625,-0.75,0.3125,-0.4375,0.40625,0,0.53125,0.53125,0.328125,-0.375,-0.59375,-0.296875,-0.796875,0.015625,0.078125,0.78125,-0.109375,0.171875,0.234375,-0.5,0.890625,0.765625,0.71875,-0.609375,0.796875,0.8125,0.640625,0.84375,0.0625,0.109375,-0.296875,-0.234375,-0.421875,0.015625,0.140625,-0.828125,0.703125,-0.765625,0.078125,0.15625,0.59375,0.25,0.015625,0.921875,-0.03125,0.1875,-0.578125,0.953125,0.875,-0.515625,0,0.75,0.4375,-0.109375,-0.296875,0.265625,-0.890625,0.421875,-0.921875,0.375,-0.484375,-0.515625,0.671875,-0.84375,-0.84375,-0.21875,-0.046875,0.765625,0.765625,0.609375,-0.40625,-1,-0.546875,0.53125,-0.578125,-0.046875,0.484375,0.453125,-0.6875,-0.5625,-0.3125,0.234375,-0.53125,-0.3125,-0.703125,0.734375,-0.0625,0.21875,-0.875,-0.65625,0.234375,0.21875,-0.453125,0.671875,-0.75,0.546875,0.921875,-0.140625,0.671875,0.90625,0.546875,0.609375,0.40625,0.15625,-0.421875,0.90625,-0.921875,-0.375,0.109375,-0.765625,0.71875,0.640625,-0.46875,0.71875,0.25,-0.75,-0.953125,0.140625,-0.765625,0.421875,0.265625
	}
};
